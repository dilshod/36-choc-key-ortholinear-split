/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
// #include <dt-bindings/zmk/mouse.h>

#define DEFAULT 0
#define NUM     1
#define NAV     2
#define APP     3
#define MOUSE   4
#define SYSTEM  5

// &mmv {
//     time-to-max-speed-ms = <1000>;
//     acceleration-exponent=<1>;
// };

// &mwh {
//     time-to-max-speed-ms = <1000>;
//     acceleration-exponent=<1>;
// };

&caps_word {
  continue-list = <UNDERSCORE MINUS BACKSPACE DELETE>;
};

&mt {
  quick-tap-ms = <200>;
};

/ {
  macros {
    space_num: space_num {
      compatible = "zmk,behavior-macro"; \
      #binding-cells = <0>; \
      bindings = <&macro_tap &kp SPACE &sl NUM>;
    };

    tmux_num: tmux_num {
      compatible = "zmk,behavior-macro"; \
      #binding-cells = <0>; \
      bindings = <&macro_press &kp LCTRL> \
               , <&macro_tap &kp S> \
               , <&macro_release &kp LCTRL> \
               , <&macro_tap &sl NUM>;
    };

    opt_bspc: opt_bspc {
      compatible = "zmk,behavior-macro"; \
      #binding-cells = <0>; \
      bindings = <&macro_press &kp LALT> \
               , <&macro_tap &kp BSPC> \
               , <&macro_release &kp LALT>;
    };
  };

  conditional_layers {
    compatible = "zmk,conditional-layers";
    tri_layer {
        if-layers = <NUM NAV>;
        then-layer = <APP>;
    };
  };

  behaviors {
    lgui_gresc: grave_escape {
      compatible = "zmk,behavior-mod-morph";
      #binding-cells = <0>;
      bindings = <&mt LGUI ESC>, <&kp GRAVE>;
      mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT|MOD_RALT|MOD_LALT)>;
      keep-mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
    };

    bspc_colon: bspc_colon {
      compatible = "zmk,behavior-mod-morph";
      #binding-cells = <0>;
      bindings = <&kp BSPC>, <&kp COLON>;
      mods = <(MOD_LSFT|MOD_RSFT)>;
    };

    hm: homerow_mods {
      compatible = "zmk,behavior-hold-tap";
      #binding-cells = <2>;
      tapping_term_ms = <250>;
      quick-tap-ms = <200>;
      global-quick-tap;
      flavor = "tap-preferred";
      bindings = <&kp>, <&kp>;
    };

    hmt: homerow_mods_no_quicktap {
      compatible = "zmk,behavior-hold-tap";
      #binding-cells = <2>;
      tapping_term_ms = <250>;
      quick-tap-ms = <200>;
      flavor = "balanced";
      bindings = <&kp>, <&kp>;
    };

    ltp: layer_tap_prefered {
      compatible = "zmk,behavior-hold-tap";
      #binding-cells = <2>;
      tapping_term_ms = <200>;
      quick-tap-ms = <150>;
      /* global-quick-tap; */
      flavor = "balanced";
      bindings = <&mo>, <&kp>;
    };

    lhp: layer_hold_prefered {
      compatible = "zmk,behavior-hold-tap";
      #binding-cells = <2>;
      tapping_term_ms = <150>;
      flavor = "hold-preferred";
      bindings = <&mo>, <&kp>;
    };

/*
    mouse_l: mouse_left {
      compatible = "zmk,behavior-mod-morph";
      #binding-cells = <0>;
      bindings = <&mmv MOVE_HOR(-5000)>, <&mmv MOVE_HOR(-2000)>;
      mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    mouse_r: mouse_right {
      compatible = "zmk,behavior-mod-morph";
      #binding-cells = <0>;
      bindings = <&mmv MOVE_HOR(5000)>, <&mmv MOVE_HOR(2000)>;
      mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    mouse_u: mouse_up {
      compatible = "zmk,behavior-mod-morph";
      #binding-cells = <0>;
      bindings = <&mmv MOVE_VERT(-5000)>, <&mmv MOVE_VERT(-2000)>;
      mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    mouse_d: mouse_down {
      compatible = "zmk,behavior-mod-morph";
      #binding-cells = <0>;
      bindings = <&mmv MOVE_VERT(5000)>, <&mmv MOVE_VERT(2000)>;
      mods = <(MOD_LSFT|MOD_RSFT)>;
    };*/
  };

  combos {
    compatible = "zmk,combos";

    #define COMBO(NAME, BINDINGS, KEYPOS, LAYERS) \
      combo_##NAME { \
        bindings = <BINDINGS>; \
        key-positions = <KEYPOS>; \
        layers = <LAYERS>; \
      };

    /*
      ╭─────────────────────╮          ╭─────────────────────╮
      │   0   1   2   3   4 │          │  5   6   7   8  10  │
      │  11  12  13  14  15 │          │ 15  16  17  18  19  │
      │  20  21  22  23  24 ╰───╮  ╭───╯ 25  26  27  28  29  │
      ╰────────────╮ 30  31  32 │  │ 33  34  35 ╭────────────╯
                   ╰────────────╯  ╰────────────╯
    */

    COMBO(caps_word, &caps_word, 30 33, DEFAULT)
  };

  keymap {
    compatible = "zmk,keymap";

    default_layer {
      bindings = <
   &kp Q        &kp W        &kp F        &kp P        &kp B                &kp J        &kp L        &kp U        &kp Y        &bspc_colon
   &kp A        &kp R        &kp S        &kp T        &kp G                &kp M        &kp N        &kp E        &kp I        &kp O
   &kp Z        &kp X        &hm LSFT C   &kp D        &kp V                &kp K        &kp H        &kp COMMA    &kp DOT      &hmt RCTRL FSLH
                            &mt LALT BSPC &mt LGUI ESC &lhp NUM TAB         &kp SPACE    &mo NAV      &mt RSFT RET
      >;
    };

    num_layer {
      bindings = <
   &kp N1       &kp N2       &kp N3       &kp N4       &kp N5               &kp N6       &kp N7       &kp N8       &kp N9       &kp N0
   &kp TILDE    &kp AMPS     &kp LPAR     &kp LBRC     &kp LBKT             &kp PLUS     &kp MINUS    &kp SQT      &kp STAR     &kp SEMI
   &kp GRAVE    &kp PIPE     &kp RPAR     &kp RBRC     &kp RBKT             &kp EQUAL    &kp UNDER    &kp DQT      &kp DLLR     &kp BSLH
                             &trans       &trans       &trans               &trans       &trans       &trans
      >;
    };

    nav_layer {
      bindings = <
   &none        &none        &none        &kp C_BRI_DN &kp C_BRI_UP         &kp C_VOL_DN &kp C_VOL_UP &kp C_PP     &kp DEL      &opt_bspc
   &caps_word   &none        &none        &space_num   &none                &kp LEFT     &kp DOWN     &kp UP       &kp RIGHT    &kp PG_UP
   &kp LCTRL    &kp LALT     &kp LSFT     &tmux_num    &none                &kp HOME     &kp END      &kp K_APP    &kp INS      &kp PG_DN
                             &trans       &kp LGUI     &trans               &mo SYSTEM   &trans       &mo SYSTEM
      >;
    };

    app_layer {
      bindings = <
   &kp F1       &kp F2       &kp F3       &kp F4       &kp F5               &kp F6       &kp F7       &kp F8       &kp F9       &kp F10
   &kp CAPS     &none        &kp PSCRN    &kp SLCK     &kp PAUSE_BREAK      &none        &none        &none        &none        &none
   &none        &none        &none        &none        &none                &none        &none        &none        &none        &none
                             &trans       &none        &none                &none        &none        &none
      >;
    };

/*    mouse_layer {
      bindings = <
   &none        &none        &none        &none        &none                &mkp MB5     &mkp LCLK    &mkp MCLK    &mkp RCLK    &mkp MB4
   &none        &none        &none        &none        &none                &mouse_l     &mouse_d     &mouse_u     &mouse_r     &mwh SCROLL_VERT(-40)
   &kp LCTRL    &kp LALT     &kp LSFT     &tog MOUSE   &none                &mwh SCROLL_HOR(40) &mwh SCROLL_HOR(-40) &none &none &mwh SCROLL_VERT(40)
                             &trans       &kp LGUI     &none                &none        &none        &kp RSFT
      >;
    };*/

    mouse_layer {
      bindings = <
   &none        &none        &none        &none        &none                &none        &none        &none        &none        &none
   &none        &none        &none        &none        &none                &none        &none        &none        &none        &none
   &kp LCTRL    &kp LALT     &kp LSFT     &tog MOUSE   &none                &none        &none        &none        &none        &none
                             &trans       &kp LGUI     &none                &none        &none        &none
      >;
    };

    system_layer {
      bindings = <
   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_CLR           &none        &none        &none        &none        &none
   &ext_power EP_ON &none        &none        &bt BT_SEL 4  &bt BT_SEL 5    &none        &none        &none        &none        &none
   &ext_power EP_OFF &none       &none        &none        &none            &none        &none        &none        &none        &none
                                 &trans       &none        &none            &none        &none        &none
      >;
    };

    emty_layer {
      bindings = <
   &none        &none        &none        &none        &none                &none        &none        &none        &none        &none
   &none        &none        &none        &none        &none                &none        &none        &none        &none        &none
   &none        &none        &none        &none        &none                &none        &none        &none        &none        &none
                             &none        &none        &none                &none        &none        &none
      >;
    };

  };
};

